name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:

env:
  DESTDIR: ./bin

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      validate-targets: ${{ steps.validate-targets.outputs.matrix }}
      artifact-platforms: ${{ steps.artifact-platforms.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Validate targets matrix
        id: validate-targets
        run: |
          echo "matrix=$(docker buildx bake validate --print | jq -cr '.target | keys')" >> $GITHUB_OUTPUT
      -
        name: Artifact platforms matrix
        id: artifact-platforms
        run: |
          echo "matrix=$(docker buildx bake artifact-all --print | jq -cr '.target."artifact-all".platforms')" >> $GITHUB_OUTPUT

  validate:
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.validate-targets) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Validate
        uses: docker/bake-action@v4
        with:
          targets: ${{ matrix.target }}

  test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Test
        uses: docker/bake-action@v4
        with:
          targets: test
          pull: true
#      -
#        name: Upload coverage
#        uses: codecov/codecov-action@v3
#        with:
#          directory: ${{ env.DESTDIR }}/coverage

  artifact:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - validate
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.prepare.outputs.artifact-platforms) }}
    steps:
      -
        name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build
        uses: docker/bake-action@v4
        with:
          targets: artifact
          pull: true
          set: |
            *.platform=${{ matrix.platform }}
            *.cache-from=type=gha,scope=artifact-${{ env.PLATFORM_PAIR }}
            *.cache-to=type=gha,scope=artifact-${{ env.PLATFORM_PAIR }},mode=max
      -
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: xcalxls2csv
          path: ${{ env.DESTDIR }}
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs:
      - artifact
      - test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: xcalxls2csv
          path: ${{ env.DESTDIR }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build
        uses: docker/bake-action@v4
        with:
          targets: release
      -
        name: Upload release
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: ${{ env.DESTDIR }}/release
          if-no-files-found: error
      -
        name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            ${{ env.DESTDIR }}/release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
